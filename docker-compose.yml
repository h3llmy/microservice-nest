version: '3'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rrabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env

  postgres:
    image: postgres:14-alpine
    container_name: postgresql
    restart: always
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - /var/lib/postgresql/data

  auth:
    container_name: auth-service
    build:
      context: ./
      dockerfile: ./apps/auth/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - .:/usr/src/app # any change to base folder should be reflected
      - /usr/src/app/node_modules
    command: npm run start:dev auth # overrides CMD from dockerfile

  api:
    container_name: api
    build:
      context: ./
      dockerfile: ./apps/api/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
    ports:
      - '4000:4000'
    volumes:
      - .:/usr/src/app # any change to base folder should be reflected
      - /usr/src/app/node_modules
    command: npm run start:dev api # overrides CMD from dockerfile

networks:
  pg_network:
    driver: bridge
